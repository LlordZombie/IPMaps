Index: src/main/java/tests/Tests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests;\r\n\r\nimport iputils.IPAddress;\r\nimport iputils.Subnet;\r\nimport org.apache.poi.ss.usermodel.*;\r\nimport org.apache.poi.*;\r\nimport org.apache.poi.ss.util.CellRangeAddress;\r\nimport org.apache.poi.xssf.usermodel.XSSFChart;\r\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\r\n\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.OutputStream;\r\nimport java.nio.file.StandardOpenOption;\r\nimport java.util.*;\r\n\r\npublic class Tests {\r\n    private static void testSet(Set<IPAddress> sIP) {\r\n        sIP.add(new IPAddress(\"10.0.0.1\"));\r\n        sIP.add(new IPAddress(\"10.0.0.2\"));\r\n        sIP.add(new IPAddress(\"10.0.0.1\"));\r\n        System.out.println(\"sIP.size() = \" + sIP.size()); // IntelliJ: soutv\r\n        for (IPAddress ip : sIP) {\r\n            System.out.println(\"ip = \" + ip);\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        testSet(new HashSet<>());\r\n        testSet(new TreeSet<>());\r\n        perfTest(new Subnet(\"192.168.0.0/24\"), new HashSet<>());\r\n        toExcel();\r\n    }\r\n\r\n    private static Map<Integer, Long> perfTest(Subnet s, Set<IPAddress> sIP) {\r\n        long start = System.currentTimeMillis();\r\n        int cidr = Integer.toBinaryString(s.getMask().getIP()).replaceAll(\"0\", \"\").length();\r\n        for (int i = 0; i < Math.pow(2, 32 - cidr); i++) {\r\n            sIP.add(new IPAddress(s.getNet().getIP() + i));\r\n        }\r\n        for (int i = 0; i < Math.pow(2, 32 - cidr) * 2; i++) {\r\n            sIP.contains(new IPAddress(s.getNet().getIP() + i));\r\n        }\r\n        HashMap<Integer, Long> h = new HashMap<>();\r\n        h.put(cidr, System.currentTimeMillis() - start);\r\n        return h;\r\n    }\r\n\r\n    public static void toExcel() {\r\n        HashMap<Integer, Long> all = new HashMap<>();\r\n        for (int i = 0; i < 32; i++) {\r\n            Subnet s = new Subnet(\"0.0.0.0/\" + i);\r\n            all.putAll(perfTest(s, new HashSet<>()));\r\n        }\r\n\r\n        try {\r\n            Workbook workbook = new XSSFWorkbook();\r\n            Sheet sheet = workbook.createSheet(\"Chart sheet\");\r\n\r\n            // TODO: excel dingsen\r\n\r\n\r\n            // Create a row and put some cells in it. Rows are 0 based.\r\n            Row row = sheet.createRow(0);\r\n            Cell cell = row.createCell(0);\r\n            cell.setCellValue(\"SNM\");\r\n            cell = row.createCell(1);\r\n            cell.setCellValue(\"Duration\");\r\n\r\n            int rownum = 1;\r\n            for (Map.Entry<Integer, Long> entry : all.entrySet()) {\r\n                row = sheet.createRow(rownum++);\r\n                cell = row.createCell(0);\r\n                cell.setCellValue(entry.getKey());\r\n                cell = row.createCell(1);\r\n                cell.setCellValue((double) entry.getValue()/100);\r\n            }\r\n\r\n            Drawing<?> drawing = sheet.createDrawingPatriarch();\r\n            try (OutputStream fileOut = new FileOutputStream(\"workbook.xlsx\")) {\r\n                workbook.write(fileOut);\r\n            }\r\n\r\n            workbook.close();\r\n\r\n        }catch (IOException e){e.printStackTrace();}\r\n\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/tests/Tests.java b/src/main/java/tests/Tests.java
--- a/src/main/java/tests/Tests.java	(revision 450dff2a043127b272b0d10abb90239579000521)
+++ b/src/main/java/tests/Tests.java	(date 1714034567861)
@@ -57,7 +57,7 @@
             Workbook workbook = new XSSFWorkbook();
             Sheet sheet = workbook.createSheet("Chart sheet");
 
-            // TODO: excel dingsen
+            // TODO: excel dingsen und kein javaheapspace
 
 
             // Create a row and put some cells in it. Rows are 0 based.
